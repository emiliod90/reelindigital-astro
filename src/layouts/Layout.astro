---
export interface Props {
  title: string;
}

const { title } = Astro.props;
import { useState } from "preact/hooks";
---

<!DOCTYPE html>
<script is:inline>
  [systemTheme, setSystemTheme] = useState("light");
  [websiteTheme, setWebsiteTheme] = useState("light");

  const mql = window.matchMedia("(prefers-color-scheme: dark)");
  console.log(mql);

  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      console.log("returned local theme");
      return localStorage.getItem("theme");
    }
    if (mql.matches) {
      console.log("returned dark prefered colour scheme");
      return "dark";
    }
    console.log("returned light");
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }
  window.localStorage.setItem("theme", theme);
  console.log("the website theme is:", theme);

  function overideTheme(e) {
    if (e.matches) {
      theme = "dark";
      // setLocalTheme("dark");
      // localStorage.setItem("theme", "dark");
    } else {
      theme = "light";
    }
  }

  mql.addEventListener("change", overideTheme);
  console.log("the desktop theme is:", theme);

  // From other
  // const mql = window.matchMedia("(prefers-color-scheme: dark)");

  // const preferences = !localStorage.getItem("theme")
  //   ? "false"
  //   : localStorage.getItem("theme");
  // if (preferences === "false") {
  //   console.log("default to system");
  //   if (mql.matches) {
  //     console.log("it is dark mode");
  //     localStorage.setItem("theme", "dark");
  //   } else {
  //     console.log("it is light mode");
  //     localStorage.setItem("theme", "light");
  //   }
  // } else if (preferences === "light") {
  //   console.log("light");
  //   document.querySelector("html").setAttribute("data-theme", "light");
  // } else if (preferences === "dark") {
  //   console.log("dark");
  //   document.querySelector("html").setAttribute("data-theme", "dark");
  // } else {
  //   console.log("os-default theme");
  // }

  // const [localTheme, setLocalTheme] = useState(preferences);
  // console.log(preferences);

  // function darkThemeTest(e) {
  //   if (e.matches) {
  //     setLocalTheme("dark");
  //     localStorage.setItem("theme", "dark");
  //   } else {
  //     setLocalTheme("light");
  //     localStorage.setItem("theme", "light");
  //   }
  // }

  // mql.addEventListener("change", darkThemeTest);

  // function toggleTheme() {
  //   if (localTheme === "dark") {
  //     console.log("changing to light");
  //     setLocalTheme("light");
  //     localStorage.setItem("theme", "light");
  //     document.querySelector("html").setAttribute("data-theme", "light");
  //   } else {
  //     console.log("changing to dark");
  //     setLocalTheme("dark");
  //     localStorage.setItem("theme", "dark");
  //     document.querySelector("html").setAttribute("data-theme", "dark");
  //   }
  // }
</script>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;500&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>
<style is:global>
  :root {
    --accent: 124, 58, 237;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      #da62c4 30%,
      white 60%
    );
  }
  html {
    font-family: system-ui, sans-serif;
    /* background-color: #f6f6f6; */
  }
  /* html[data-theme="light"] {
  --background-primary: purple;
  --background-secondary: #f9f9fb;
  --text-primary: #1b1b1b;
  --text-secondary: #4e4e4e;
  --accent-primary: #0085f2;
  --text-link: #0069c2;
  --button-primary-default: #1b1b1b;
  --button-primary-hover: #696969;
  --button-primary-active: #9e9e9e;
  --button-primary-inactive: #1b1b1b;
  --icon-primary: #696969;
  --icon-secondary: #b3b3b3;
}

html[data-theme="dark"] {
  --background-primary: yellow;
  --background-secondary: #343434;
  --text-primary: #fff;
  --text-secondary: #cdcdcd;
  --accent-primary: #5e9eff;
  --text-link: #8cb4ff;
  --button-primary-default: #fff;
  --button-primary-hover: #cdcdcd;
  --button-primary-active: #9e9e9e;
  --button-primary-inactive: #fff;
  --icon-primary: #fff;
  --icon-secondary: #b3b3b3;
} */

  code {
    font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
      DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
  }
  @media (prefers-color-scheme: dark) {
    :root {
      /* --background-default: #27272a; */
      --background-default: red;
      --background-primary: #1b1b1b;
      --background-secondary: #343434;
      --text-primary: #fff;
      --text-secondary: #cdcdcd;
      --accent-primary: #5e9eff;
      --text-link: #8cb4ff;
      --button-primary-default: #fff;
      --button-primary-hover: #cdcdcd;
      --button-primary-active: #9e9e9e;
      --button-primary-inactive: #fff;
      --icon-primary: #fff;
      --icon-secondary: #b3b3b3;
    }
  }

  @media (prefers-color-scheme: light) {
    :root {
      --background-default: blue;
      --background-primary: #fff;
      --background-secondary: #f9f9fb;
      --text-primary: #1b1b1b;
      --text-secondary: #4e4e4e;
      --accent-primary: #0085f2;
      --text-link: #0069c2;
      --button-primary-default: #1b1b1b;
      --button-primary-hover: #696969;
      --button-primary-active: #9e9e9e;
      --button-primary-inactive: #1b1b1b;
      --icon-primary: #696969;
      --icon-secondary: #b3b3b3;
    }
  }
  body {
    margin: 0;
    background-color: var(--background-default);
  }
  @font-face {
    font-family: "rocket_wildness";
    src: url("/fonts/rocket_wildness.woff") format("woff");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
</style>
